Parameters:
    CloudthreadStackToken:
        Type: String
        Default: foo
        Description: DO NOT CHANGE! Token to validate this stack in Cloudthread's environment.
    ExternalId:
        Type: String
        Default: bar
        Description: DO NOT CHANGE! Token to validate Cloudthread in this environment.
Resources:
    StackSet:
        DependsOn:
        - CloudthreadRootRole
        Type: AWS::CloudFormation::StackSet
        Properties:
          AutoDeployment:
            Enabled: True
            RetainStacksOnAccountRemoval: True
          Capabilities:
            - CAPABILITY_IAM
          PermissionModel: SERVICE_MANAGED
          StackInstancesGroup:
            - DeploymentTargets:
                OrganizationalUnitIds:
                  - foo
              Regions:
                - us-east-1
          StackSetName: CloudthreadCostOptimization
          TemplateBody: !Sub
            - |
              AWSTemplateFormatVersion: "2010-09-09"         
              Resources:
                  CloudthreadCostOptimizationRole:
                      Type: "AWS::IAM::Role"
                      Properties:
                          AssumeRolePolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Principal:
                                      AWS: bar
                                    Action:
                                      - "sts:AssumeRole"
                                    Condition:
                                      StringEquals:
                                          sts:ExternalId: $${{ExternalId}}
                          Path: "/"
                  RolePoliciesListPermissions:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-list-permissions-access"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "iam:ListRolePolicies"
                                    Resource:
                                      - !GetAtt CloudthreadCostOptimizationRole.Arn
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesReadCloudwatch:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-read-cloudwatch-access"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "cloudwatch:ListMetrics"
                                      - "cloudwatch:GetMetricData"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectEC2Opportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-ec2-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "ec2:Describe*"
                                      - "ec2:Get*"
                                      - "ec2:List*"
                                      - "ec2:Search*"
                                      - "autoscaling:Describe*"
                                      - "autoscaling:Get*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectRDSOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-rds-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "rds:Describe*"
                                      - "rds:Download*"
                                      - "rds:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectS3Opportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-s3-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "s3:Describe*"
                                      - "s3:Get*"
                                      - "s3:List*"
                                      - "s3-outposts:Get*"
                                      - "s3-outposts:List*"
                                      - "s3-object-lambda:Get*"
                                      - "s3-object-lambda:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectDynamoDBOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-dynamodb-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "dynamodb:Describe*"
                                      - "dynamodb:Get*"
                                      - "dynamodb:List*"
                                      - "dax:Describe*"
                                      - "dax:Get*"
                                      - "dax:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectLambdaOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-lambda-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "lambda:Get*"
                                      - "lambda:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectStepFunctionOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-stepfunction-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "states:Describe*"
                                      - "states:Get*"
                                      - "states:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectECSOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-ecs-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "ecs:Describe*"
                                      - "ecs:Get*"
                                      - "ecs:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectELBOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-elb-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "elasticloadbalancing:Describe*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectElasticCacheOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-ec-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "elasticache:Describe*"
                                      - "elasticache:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectOpenSearchOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-opensearch-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "aoss:Describe*"
                                      - "aoss:Get*"
                                      - "aoss:List*"
                                      - "es:Describe*"
                                      - "es:Get*"
                                      - "es:List*"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RolePoliciesDetectTrustedAdvisorOpportunities:
                      Type: "AWS::IAM::Policy"
                      Properties:
                          PolicyName: "cloudthread-detect-trustedadvisor-opportunities"
                          PolicyDocument:
                              Version: "2012-10-17"
                              Statement:
                                  - Effect: "Allow"
                                    Action:
                                      - "support:DescribeTrustedAdvisorCheckResult"
                                      - "support:DescribeTrustedAdvisorChecks"
                                    Resource:
                                      - "*"
                          Roles:
                              - Ref: "CloudthreadCostOptimizationRole"
                  RegisterCostOptimizationRole:
                      DependsOn:
                      - CloudthreadCostOptimizationRole
                      - RolePoliciesListPermissions
                      - RolePoliciesReadCloudwatch
                      - RolePoliciesDetectEC2Opportunities
                      - RolePoliciesDetectRDSOpportunities
                      - RolePoliciesDetectS3Opportunities
                      - RolePoliciesDetectDynamoDBOpportunities
                      - RolePoliciesDetectLambdaOpportunities
                      - RolePoliciesDetectStepFunctionOpportunities
                      - RolePoliciesDetectECSOpportunities
                      - RolePoliciesDetectELBOpportunities
                      - RolePoliciesDetectElasticCacheOpportunities
                      - RolePoliciesDetectOpenSearchOpportunities
                      - RolePoliciesDetectTrustedAdvisorOpportunities
                      Type: Custom::RegisterRole
                      Properties:
                          ServiceToken: bar
                          AwsAccountId:
                              Ref: AWS::AccountId
                          RoleName:
                              Ref: CloudthreadCostOptimizationRole
                          RoleArn: !GetAtt CloudthreadCostOptimizationRole.Arn
                          RoleArnRoot: $${{RoleArnRoot}}
                          CloudthreadStackToken: $${{CloudthreadStackToken}}
                          CloudthreadStackType: cost-optimization
                          ExternalId: $${{ExternalId}}
            - CloudthreadStackToken: !Ref CloudthreadStackToken
              ExternalId: !Ref ExternalId
              RoleArnRoot: !GetAtt CloudthreadRootRole.Arn
    CloudthreadRootRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Principal:
                        AWS: foo
                      Action:
                        - "sts:AssumeRole"
                      Condition:
                        StringEquals:
                            sts:ExternalId:
                                Ref: ExternalId
            Path: "/"
    RolePoliciesDescribeAccount:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: "cloudthread-describe-account-access"
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Action:
                        - "organizations:DescribeAccount"
                      Resource:
                        - "*"
            Roles:
                - Ref: "CloudthreadRootRole"
